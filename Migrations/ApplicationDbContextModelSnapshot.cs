// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BindrAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BindrAPI.Models.Entities.FieldResponse", b =>
                {
                    b.Property<Guid>("responseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("FormFieldId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FormSubmissionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("responseID");

                    b.HasIndex("FormSubmissionId");

                    b.ToTable("FieldResponses");
                });

            modelBuilder.Entity("BindrAPI.Models.Entities.FileUpload", b =>
                {
                    b.Property<Guid>("fileUploadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("FormSubmissionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("fileUploadID");

                    b.HasIndex("FormSubmissionId");

                    b.ToTable("FileUploads");
                });

            modelBuilder.Entity("BindrAPI.Models.Entities.FormField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FieldType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("FormTemplateId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("boolean");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FormTemplateId");

                    b.ToTable("FormFields");
                });

            modelBuilder.Entity("BindrAPI.Models.Entities.FormSubmission", b =>
                {
                    b.Property<Guid>("formSubmissionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("FormTemplateId")
                        .HasColumnType("uuid");

                    b.Property<string>("StoragePath")
                        .HasColumnType("text");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SubmitterEmail")
                        .HasColumnType("text");

                    b.Property<Guid?>("locationID")
                        .HasColumnType("uuid");

                    b.HasKey("formSubmissionID");

                    b.HasIndex("FormTemplateId");

                    b.HasIndex("locationID");

                    b.ToTable("FormSubmissions");
                });

            modelBuilder.Entity("BindrAPI.Models.Entities.FormTemplate", b =>
                {
                    b.Property<Guid>("formTemplateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("headerImageURL")
                        .HasColumnType("text");

                    b.Property<Guid>("ownerID")
                        .HasColumnType("uuid");

                    b.Property<bool>("requireLocation")
                        .HasColumnType("boolean");

                    b.Property<bool>("requireSignature")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("formTemplateID");

                    b.HasIndex("ownerID");

                    b.ToTable("FormTemplates");
                });

            modelBuilder.Entity("BindrAPI.Models.Entities.LocationInfo", b =>
                {
                    b.Property<Guid>("locationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CapturedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("IPAddress")
                        .HasColumnType("text");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.HasKey("locationID");

                    b.ToTable("LocationInfos");
                });

            modelBuilder.Entity("BindrAPI.Models.Entities.QrCode", b =>
                {
                    b.Property<Guid>("codeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("FormTemplateId")
                        .HasColumnType("uuid");

                    b.Property<string>("QrCodeUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("codeID");

                    b.HasIndex("FormTemplateId")
                        .IsUnique();

                    b.ToTable("QrCodes");
                });

            modelBuilder.Entity("BindrAPI.Models.Entities.User", b =>
                {
                    b.Property<Guid>("userID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("passwordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("userID");

                    b.HasIndex("email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BindrAPI.Models.Entities.FieldResponse", b =>
                {
                    b.HasOne("BindrAPI.Models.Entities.FormSubmission", null)
                        .WithMany("Responses")
                        .HasForeignKey("FormSubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BindrAPI.Models.Entities.FileUpload", b =>
                {
                    b.HasOne("BindrAPI.Models.Entities.FormSubmission", null)
                        .WithMany("Files")
                        .HasForeignKey("FormSubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BindrAPI.Models.Entities.FormField", b =>
                {
                    b.HasOne("BindrAPI.Models.Entities.FormTemplate", null)
                        .WithMany("Fields")
                        .HasForeignKey("FormTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BindrAPI.Models.Entities.FormSubmission", b =>
                {
                    b.HasOne("BindrAPI.Models.Entities.FormTemplate", "FormTemplate")
                        .WithMany()
                        .HasForeignKey("FormTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BindrAPI.Models.Entities.LocationInfo", "Location")
                        .WithMany()
                        .HasForeignKey("locationID");

                    b.Navigation("FormTemplate");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("BindrAPI.Models.Entities.FormTemplate", b =>
                {
                    b.HasOne("BindrAPI.Models.Entities.User", "Owner")
                        .WithMany()
                        .HasForeignKey("ownerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("BindrAPI.Models.Entities.QrCode", b =>
                {
                    b.HasOne("BindrAPI.Models.Entities.FormTemplate", null)
                        .WithOne("QrCode")
                        .HasForeignKey("BindrAPI.Models.Entities.QrCode", "FormTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BindrAPI.Models.Entities.FormSubmission", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Responses");
                });

            modelBuilder.Entity("BindrAPI.Models.Entities.FormTemplate", b =>
                {
                    b.Navigation("Fields");

                    b.Navigation("QrCode");
                });
#pragma warning restore 612, 618
        }
    }
}
